name: Playwright Tests
on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.48.0-focal
      env:
        envName: "asdf"
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: |
          CI=true
          npx playwright test
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: ./playwright-report/
        retention-days: 30
    - name: Publish CTRF Test Summary Results
      run: npx github-actions-ctrf ctrf/ctrf-report.json
      if: always()
    - name: Publish CTRF Test Summary Results
      run: npx github-actions-ctrf summary ctrf/ctrf-report.json
      if: always()
    - name: Publish CTRF Detailed Test Summary Results
      run: npx github-actions-ctrf tests ctrf/ctrf-report.json
      if: always()
    - name: Publish CTRF Custom summary
      run: npx github-actions-ctrf custom ctrf/ctrf-report.json templates/customReport.hbs
      if: always()
    - name: get properties
      id: json_properties
      uses: ActionsTools/read-json-action@main
      with:
        file_path: "./ctrf/ctrf-report.json"
        prop_path: "results.summary.tests"
    - run: |
        TESTS=${{steps.json_properties.outputs.value}}
        echo TESTS=$TESTS >> $GITHUB_ENV
  send-teams-notification:
    runs-on: ubuntu-latest
    needs: test
    name: Send teams notification
    steps:     
      - name: Post to Teams
        run: | 
          response=$(curl -H "Content-Type: application/json" \
          "https://dilcorp.webhook.office.com/webhookb2/08b54ac0-14ae-4994-8005-6cf6c0b1c4f7@80359a55-fc53-4acf-af25-a2e6e3ebf779/IncomingWebhook/9b3396dc028f4744ab2dc70d83833fc2/5bb5f15a-f91c-4fa9-a51a-453eb8b37399/V2thCr04Yl04Htlz1nTKL62YOVPxTFlfEIXrozDRTJoYA1" \
          -d '{
            "type": "message",
            "attachments": [
              {
                "team": "DIL-BLC-ENV-INFO",
                "channel": "Saf playground",
                "contentType": "application/vnd.microsoft.card.adaptive",
                "contentUrl": null,
                "content": {
                  "type": "AdaptiveCard",
                  "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                  "version": "1.4",
                  "body": [
                    {
                      "type": "TextBlock",
                      "text": "Playwright test results + ${{ needs.env.TESTS }}",
                      "wrap": true,
                      "fontType": "Default",
                      "style": "heading",
                      "size": "ExtraLarge",
                      "weight": "Bolder",
                      "color": "Default"
                    }
                  ]
                }
              }
            ]
          }')

          echo $response
          if [[ $response == *'failure'* || $response == *'error'* ]]; then
            echo 'Request failed'
            exit 1
          fi  
