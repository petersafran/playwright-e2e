name: Playwright Tests
on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.48.0-focal
      env:
        envName: "asdf"
    outputs:
      TESTS: ${{steps.json_properties.outputs.value}}
      PASSED: ${{steps.json_properties.outputs.results.summary.passed}}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: |
          CI=true
          npx playwright test
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: ./playwright-report/
        retention-days: 30
    - name: Publish CTRF Test Summary Results
      run: npx github-actions-ctrf ctrf/ctrf-report.json
      if: always()
    - name: Publish CTRF Test Summary Results
      run: npx github-actions-ctrf summary ctrf/ctrf-report.json
      if: always()
    - name: Publish CTRF Detailed Test Summary Results
      run: npx github-actions-ctrf tests ctrf/ctrf-report.json
      if: always()
    - name: Publish CTRF Custom summary
      run: npx github-actions-ctrf custom ctrf/ctrf-report.json templates/customReport.hbs
      if: always()
    - name: Read Summary Report to Get Test Results
      if: always()
      run: |          
          TESTS=$(cat ctrf/ctrf-report.json | jq '.results.summary.tests')
          echo "TESTS=$TESTS" >> $GITHUB_ENV 
          PASSED=$(cat ctrf/ctrf-report.json | jq '.results.summary.passed')
          echo "PASSED=$PASSED" >> $GITHUB_ENV 
          FAILURES=$cat ctrf/ctrf-report.json | jq '.results.summary.failed')
          echo "FAILURES=$FAILURES" >> $GITHUB_ENV
